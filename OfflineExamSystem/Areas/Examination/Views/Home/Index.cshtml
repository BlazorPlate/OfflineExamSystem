@using System.Threading;
@using System.Globalization
@using OfflineExamSystem.Helpers
@model OfflineExamSystem.Areas.Examination.ViewModels.SessionViewModel

@{
    ViewBag.Title = Resources.Resources.LogIn;
    Layout = "";
    CultureInfo arCultureInfo = CultureInfo.CreateSpecificCulture("ar-JO");
    CultureInfo enCultureInfo = CultureInfo.CreateSpecificCulture("en-US");
}
<style>
    .login-img {
        background-image: url("../../assets/img/nuclear-hd-wallpapers_1920x1200_h.jpg") !important;
        /*background-image: url('../../assets/img/demo/m1.jpg');*/
        /* Full height */
        height: 100%;
        /* Center and scale the image nicely */
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .mt-100 {
        margin-top: 10%;
        opacity: 0.9;
    }
</style>
<!DOCTYPE html>
<html lang="en-us" id="extr-page">
<head>
    <meta charset="utf-8">
    <title>Exam System</title>
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <!-- #CSS Links -->
    <!-- Basic Styles -->
    @Styles.Render("~/content/smartadmin")
    @Styles.Render("~/content/fontawesome")
    <!-- #FAVICONS -->
    <link rel="shortcut icon" href="~/assets/img/favicon/favicon.ico" type="image/x-icon">
    <link rel="icon" href="~/assets/img/favicon/favicon.ico" type="image/x-icon">

</head>
<body class=@(CultureHelper.IsRighToLeft() ? "smart-rtl animated fadeInDown":"animated fadeInDown")>
    <div class="login-img" role="main">
        <!-- MAIN CONTENT -->
        <div id="content" class="container">
            <div class="row">
                <div class="col-md-3">
                </div>
                <div class="col-md-6 mt-100">
                    <div class="well no-padding">
                        @using (Html.BeginForm("Router", "Home", FormMethod.Post, new { id = "checkout-form", @class = "smart-form" }))
                        {
                            @Html.HiddenFor(m => m.UserName)
                            @Html.HiddenFor(m => m.FullName_Ar)
                            @Html.HiddenFor(m => m.FullName_En)
                            <fieldset>
                                <fieldset>
                                    <section>
                                        <label class="label">@Resources.Resources.ExamMode</label>
                                        <label class="select">
                                            @if (Thread.CurrentThread.CurrentCulture.Name.Equals("en-US"))
                                            {
                                                @Html.DropDownList("ExamMode", new List<SelectListItem> { new SelectListItem { Text = "Simulation", Value = "false" }, new SelectListItem { Text = "Real", Value = "true" } }, Resources.Resources.ChooseExamMode, new { @class = "input-sm" })

                                            }
                                            else
                                            {
                                                @Html.DropDownList("ExamMode", new List<SelectListItem> { new SelectListItem { Text = "محاكاة", Value = "false" }, new SelectListItem { Text = "حقيقي", Value = "true" } }, Resources.Resources.ChooseExamMode, new { @class = "input-sm" })
                                            }
                                            @Html.ValidationMessageFor(model => model.ExamMode, "", new { @class = "text-danger" })

                                            <i></i>
                                        </label>
                                    </section>
                                    <section>
                                        <label class="label">@Html.Label(Resources.Resources.ExamType)</label>
                                        <label class="select">
                                            @Html.DropDownListFor(model => model.ExamId, null, Resources.Resources.ChooseExamType, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ExamId, "", new { @class = "text-danger" })
                                            <i></i>
                                        </label>
                                    </section>
                                </fieldset>
                            </fieldset>
                            <footer>
                                <button type="submit" class="btn btn-primary">@Resources.Resources.Next >></button>
                                <a class="btn btn-primary" href="@Url.Action("Index","Home")">@Resources.Resources.Back</a>
                            </footer>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-3">
            </div>
        </div>
    </div>
    @{ Html.RenderPartial("~/Views/Shared/_Scripts.cshtml"); }
    <script type="text/javascript">
        $("#ExamId").empty();
        $(document).ready(function () {
            $("#ExamMode").change(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetExamsByExamMode")',
                    dataType: 'json',
                    data: { examMode: $("#ExamMode").val() },
                    success: function (Exams) {
                        $("#ExamId").empty();
                        $("#ExamId").append('<option value>@Resources.Resources.ChooseExamType</option>');
                        $.each(Exams, function (i, Exam) {
                            $("#ExamId").append('<option value="' + Exam.Value + '">' + Exam.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        if ($("#ExamMode").val()!="") {
                            alert('Failed to retrieve Exams.' + ex);
                        }
                    }
                });
                return false;
            })
        });
    </script>

</body>
</html>
