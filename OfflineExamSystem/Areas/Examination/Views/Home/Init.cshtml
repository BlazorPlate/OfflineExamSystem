@model OfflineExamSystem.Areas.Examination.ViewModels.SessionViewModel
<div class="jumbotron">
    <h2> Offline Exam System</h2>
</div>

@if (TempData["message"] != null)
{
    <div class="row">
        <div class="col-md-10">
            <p>
                @Html.Raw(TempData["message"])
            </p>
        </div>
    </div>
}
<br /><br />
@using (Html.BeginForm("Router", "Home", FormMethod.Post))
{
    @Html.HiddenFor(m => m.UserName)
    @Html.HiddenFor(m => m.FullName_Ar)
    @Html.HiddenFor(m => m.FullName_En)
    <div class="container">
        <div class="row form-horizontal">

            <div class="form-group">
                <div class="col-md-3">@Html.Label("Choose exam mode")</div>
                <div class="col-md-5">
                    @Html.DropDownList("ExamMode", new List<SelectListItem> { new SelectListItem { Text = "Simulation", Value = "false" }, new SelectListItem { Text = "Real", Value = "true" } }, "-- Select mode --", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">@Html.Label("Choose exam type")</div>
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.ExamId, null, "--Choose type--", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            @*<div class="form-group">
                    <div class="col-md-3">@Html.Label("Complete from previous?")</div>
                    <div class="col-md-5">
                        @Html.CheckBox("Resume", false)
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-3"></div>
                <div class="col-md-5">
                    <a class="btn btn-primary" href="@Url.Action("Index","Home")">Back</a>
                    <button type="submit" class="btn btn-primary">Next>></button>
                </div>
            </div>

        </div>
    </div>
}
@section Scripts {

}